<%- include('../partials/header') %>

<div class="container-fluid">
  <div class="row">
    <!-- Sidebar -->
    <div class="col-md-2 d-none d-md-block bg-light sidebar">
      <div class="sidebar-sticky">
        <h6 class="sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted">
          <span>Admin Navigation</span>
        </h6>
        <ul class="nav flex-column">
          <li class="nav-item">
            <a class="nav-link <%= path === '/admin/dashboard' ? 'active' : '' %>" href="/admin/dashboard">
              <i class="fas fa-tachometer-alt"></i> Dashboard
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link <%= path === '/admin/certification-levels' ? 'active' : '' %>" href="/admin/certification-levels">
              <i class="fas fa-certificate"></i> Certification Levels
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link <%= path === '/admin/clinical-scheduling' ? 'active' : '' %>" href="/admin/clinical-scheduling">
              <i class="fas fa-calendar-alt"></i> Clinical Scheduling
            </a>
          </li>
        </ul>
      </div>
    </div>

    <!-- Main Content -->
    <main role="main" class="col-md-10 ml-sm-auto px-4">
      <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="h2">Clinical Scheduling Management</h1>
        <div class="btn-toolbar mb-2 mb-md-0">
          <button type="button" class="btn btn-sm btn-outline-primary" id="btnAddSlot">
            <i class="fas fa-plus"></i> Add New Clinical Slot
          </button>
          <button type="button" class="btn btn-sm btn-outline-success ml-2" id="btnAutoAssign">
            <i class="fas fa-magic"></i> Auto-Assign Students
          </button>
        </div>
      </div>

      <!-- Filter Controls -->
      <div class="row mb-3">
        <div class="col-md-3">
          <label for="sitesFilter">Clinical Site:</label>
          <select class="form-control" id="sitesFilter">
            <option value="">All Sites</option>
            <!-- Sites will be populated here -->
          </select>
        </div>
        <div class="col-md-3">
          <label for="startDateFilter">Start Date:</label>
          <input type="date" class="form-control" id="startDateFilter">
        </div>
        <div class="col-md-3">
          <label for="endDateFilter">End Date:</label>
          <input type="date" class="form-control" id="endDateFilter">
        </div>
        <div class="col-md-3 align-self-end">
          <button type="button" class="btn btn-primary btn-block" id="btnFilterSlots">
            <i class="fas fa-filter"></i> Filter
          </button>
        </div>
      </div>

      <!-- Clinical Slots Table -->
      <div class="table-responsive">
        <table class="table table-striped table-sm" id="clinicalSlotsTable">
          <thead>
            <tr>
              <th>ID</th>
              <th>Site</th>
              <th>Date</th>
              <th>Time</th>
              <th>Capacity</th>
              <th>Assigned</th>
              <th>Preceptor</th>
              <th>Status</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            <!-- Clinical slots will be loaded here -->
          </tbody>
        </table>
      </div>

      <div class="d-flex justify-content-between mt-3">
        <button class="btn btn-secondary" id="btnPrevPage" disabled>Previous</button>
        <span id="paginationInfo">Page 1 of 1</span>
        <button class="btn btn-secondary" id="btnNextPage" disabled>Next</button>
      </div>
    </main>
  </div>
</div>

<!-- Add/Edit Clinical Slot Modal -->
<div class="modal fade" id="slotModal" tabindex="-1" role="dialog" aria-labelledby="slotModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="slotModalLabel">Add Clinical Slot</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <form id="slotForm">
          <input type="hidden" id="slotId">
          <div class="form-row">
            <div class="form-group col-md-6">
              <label for="siteId">Clinical Site*</label>
              <select class="form-control" id="siteId" required>
                <option value="">Select a site</option>
                <!-- Sites will be populated here -->
              </select>
            </div>
            <div class="form-group col-md-6">
              <label for="slotDate">Date*</label>
              <input type="date" class="form-control" id="slotDate" required>
            </div>
          </div>
          <div class="form-row">
            <div class="form-group col-md-4">
              <label for="startTime">Start Time*</label>
              <input type="time" class="form-control" id="startTime" required>
            </div>
            <div class="form-group col-md-4">
              <label for="endTime">End Time*</label>
              <input type="time" class="form-control" id="endTime" required>
            </div>
            <div class="form-group col-md-4">
              <label for="maxStudents">Maximum Students*</label>
              <input type="number" class="form-control" id="maxStudents" min="1" required>
            </div>
          </div>
          <div class="form-row">
            <div class="form-group col-md-6">
              <label for="preceptorName">Preceptor Name</label>
              <input type="text" class="form-control" id="preceptorName">
            </div>
            <div class="form-group col-md-6">
              <label for="isActive">Status</label>
              <select class="form-control" id="isActive">
                <option value="true">Active</option>
                <option value="false">Inactive</option>
              </select>
            </div>
          </div>
          <div class="form-group">
            <label for="notes">Notes</label>
            <textarea class="form-control" id="notes" rows="3"></textarea>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" id="btnSaveSlot">Save</button>
      </div>
    </div>
  </div>
</div>

<!-- View Assignments Modal -->
<div class="modal fade" id="assignmentsModal" tabindex="-1" role="dialog" aria-labelledby="assignmentsModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="assignmentsModalLabel">Student Assignments</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <div class="slot-details mb-3">
          <h6>Clinical Slot Details:</h6>
          <p id="slotDetailsText"></p>
        </div>
        <hr>
        <h6>Current Assignments</h6>
        <div class="table-responsive">
          <table class="table table-sm" id="assignmentsTable">
            <thead>
              <tr>
                <th>Student</th>
                <th>Assigned By</th>
                <th>Assigned Date</th>
                <th>Notes</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              <!-- Assignments will be loaded here -->
            </tbody>
          </table>
        </div>
        <hr>
        <h6>Add New Assignment</h6>
        <form id="assignmentForm">
          <div class="form-row">
            <div class="form-group col-md-6">
              <label for="studentId">Student*</label>
              <select class="form-control" id="studentId" required>
                <option value="">Select a student</option>
                <!-- Students will be populated here -->
              </select>
            </div>
            <div class="form-group col-md-6">
              <label for="assignmentNotes">Notes</label>
              <input type="text" class="form-control" id="assignmentNotes">
            </div>
          </div>
          <button type="button" class="btn btn-primary" id="btnAddAssignment">Add Assignment</button>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<!-- Auto-Assign Modal -->
<div class="modal fade" id="autoAssignModal" tabindex="-1" role="dialog" aria-labelledby="autoAssignModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="autoAssignModalLabel">Auto-Assign Students</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <p>Select date range for auto-assignment:</p>
        <form id="autoAssignForm">
          <div class="form-row">
            <div class="form-group col-md-6">
              <label for="autoAssignStartDate">Start Date*</label>
              <input type="date" class="form-control" id="autoAssignStartDate" required>
            </div>
            <div class="form-group col-md-6">
              <label for="autoAssignEndDate">End Date*</label>
              <input type="date" class="form-control" id="autoAssignEndDate" required>
            </div>
          </div>
        </form>
        <div class="alert alert-info">
          <small>
            <i class="fas fa-info-circle"></i> Auto-assignment will attempt to place students in clinical slots based on their preferences.
            Students with higher preference ranks will be prioritized. Only unassigned slots with available capacity will be considered.
          </small>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" id="btnConfirmAutoAssign">Auto-Assign</button>
      </div>
    </div>
  </div>
</div>

<script>
$(document).ready(function() {
  // Initialize with current date values
  const today = new Date();
  const startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);
  const endOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);
  
  // Format date to YYYY-MM-DD
  const formatDate = (date) => {
    const d = new Date(date);
    let month = '' + (d.getMonth() + 1);
    let day = '' + d.getDate();
    const year = d.getFullYear();
    
    if (month.length < 2) month = '0' + month;
    if (day.length < 2) day = '0' + day;
    
    return [year, month, day].join('-');
  };
  
  $('#startDateFilter').val(formatDate(startOfMonth));
  $('#endDateFilter').val(formatDate(endOfMonth));
  
  // Load clinical sites for dropdowns
  function loadClinicalSites() {
    $.get('/api/clinical/sites/active', function(data) {
      const sites = data.sites;
      let siteOptions = '<option value="">All Sites</option>';
      let modalSiteOptions = '<option value="">Select a site</option>';
      
      sites.forEach(site => {
        siteOptions += `<option value="${site.site_id}">${site.site_name}</option>`;
        modalSiteOptions += `<option value="${site.site_id}">${site.site_name}</option>`;
      });
      
      $('#sitesFilter').html(siteOptions);
      $('#siteId').html(modalSiteOptions);
    });
  }
  
  // Load clinical slots
  function loadClinicalSlots() {
    const siteId = $('#sitesFilter').val();
    const startDate = $('#startDateFilter').val();
    const endDate = $('#endDateFilter').val();
    
    let url = `/api/scheduling/slots?startDate=${startDate}&endDate=${endDate}`;
    if (siteId) {
      url += `&siteId=${siteId}`;
    }
    
    $.get(url, function(data) {
      const slots = data.slots;
      let rows = '';
      
      if (slots.length === 0) {
        $('#clinicalSlotsTable tbody').html('<tr><td colspan="9" class="text-center">No clinical slots found.</td></tr>');
        return;
      }
      
      slots.forEach(slot => {
        const date = new Date(slot.slot_date).toLocaleDateString();
        const startTime = slot.start_time.substring(0, 5);
        const endTime = slot.end_time.substring(0, 5);
        const status = slot.is_active ? 
          '<span class="badge badge-success">Active</span>' : 
          '<span class="badge badge-danger">Inactive</span>';
        
        rows += `
          <tr>
            <td>${slot.slot_id}</td>
            <td>${slot.site_name}</td>
            <td>${date}</td>
            <td>${startTime} - ${endTime}</td>
            <td>${slot.assigned_count || 0} / ${slot.max_students}</td>
            <td>${slot.preceptor_name || '-'}</td>
            <td>${status}</td>
            <td>
              <button class="btn btn-sm btn-primary view-assignments" data-id="${slot.slot_id}">
                <i class="fas fa-users"></i> Assignments
              </button>
              <button class="btn btn-sm btn-secondary edit-slot" data-id="${slot.slot_id}">
                <i class="fas fa-edit"></i> Edit
              </button>
            </td>
          </tr>
        `;
      });
      
      $('#clinicalSlotsTable tbody').html(rows);
    });
  }
  
  // Handle filter button click
  $('#btnFilterSlots').click(function() {
    loadClinicalSlots();
  });
  
  // Initialize page
  loadClinicalSites();
  loadClinicalSlots();
  
  // Open add slot modal
  $('#btnAddSlot').click(function() {
    $('#slotModalLabel').text('Add Clinical Slot');
    $('#slotForm')[0].reset();
    $('#slotId').val('');
    $('#slotModal').modal('show');
  });
  
  // Save clinical slot
  $('#btnSaveSlot').click(function() {
    const slotId = $('#slotId').val();
    const data = {
      siteId: $('#siteId').val(),
      slotDate: $('#slotDate').val(),
      startTime: $('#startTime').val(),
      endTime: $('#endTime').val(),
      maxStudents: $('#maxStudents').val(),
      preceptorName: $('#preceptorName').val(),
      notes: $('#notes').val(),
      isActive: $('#isActive').val() === 'true'
    };
    
    let url, method;
    if (slotId) {
      // Update existing slot
      url = `/api/scheduling/slots/${slotId}`;
      method = 'PUT';
    } else {
      // Create new slot
      url = '/api/scheduling/slots/add';
      method = 'POST';
    }
    
    $.ajax({
      url: url,
      method: method,
      data: JSON.stringify(data),
      contentType: 'application/json',
      success: function(response) {
        $('#slotModal').modal('hide');
        loadClinicalSlots();
        alert(slotId ? 'Clinical slot updated successfully!' : 'Clinical slot added successfully!');
      },
      error: function(xhr) {
        alert('Error: ' + (xhr.responseJSON ? xhr.responseJSON.error : 'Failed to save clinical slot'));
      }
    });
  });
  
  // Edit slot
  $(document).on('click', '.edit-slot', function() {
    const slotId = $(this).data('id');
    
    $.get(`/api/scheduling/slots/${slotId}`, function(slot) {
      $('#slotModalLabel').text('Edit Clinical Slot');
      $('#slotId').val(slot.slot_id);
      $('#siteId').val(slot.site_id);
      $('#slotDate').val(slot.slot_date.split('T')[0]);
      $('#startTime').val(slot.start_time.substring(0, 5));
      $('#endTime').val(slot.end_time.substring(0, 5));
      $('#maxStudents').val(slot.max_students);
      $('#preceptorName').val(slot.preceptor_name || '');
      $('#notes').val(slot.notes || '');
      $('#isActive').val(slot.is_active.toString());
      
      $('#slotModal').modal('show');
    });
  });
  
  // View assignments
  $(document).on('click', '.view-assignments', function() {
    const slotId = $(this).data('id');
    
    // Load slot details
    $.get(`/api/scheduling/slots/${slotId}`, function(slot) {
      const date = new Date(slot.slot_date).toLocaleDateString();
      const startTime = slot.start_time.substring(0, 5);
      const endTime = slot.end_time.substring(0, 5);
      
      $('#slotDetailsText').html(`
        <strong>Site:</strong> ${slot.site_name}<br>
        <strong>Date:</strong> ${date}<br>
        <strong>Time:</strong> ${startTime} - ${endTime}<br>
        <strong>Capacity:</strong> ${slot.assigned_count || 0} / ${slot.max_students}<br>
        <strong>Preceptor:</strong> ${slot.preceptor_name || 'Not assigned'}
      `);
      
      // Load current assignments
      $.get(`/api/scheduling/slots/${slotId}/assignments`, function(data) {
        const assignments = data.assignments;
        let rows = '';
        
        if (assignments.length === 0) {
          $('#assignmentsTable tbody').html('<tr><td colspan="5" class="text-center">No students assigned to this slot.</td></tr>');
        } else {
          assignments.forEach(assignment => {
            const assignedDate = new Date(assignment.created_at).toLocaleDateString();
            
            rows += `
              <tr>
                <td>${assignment.student_name}</td>
                <td>${assignment.assigned_by_name}</td>
                <td>${assignedDate}</td>
                <td>${assignment.notes || '-'}</td>
                <td>
                  <button class="btn btn-sm btn-danger remove-assignment" data-id="${assignment.assignment_id}">
                    <i class="fas fa-trash"></i> Remove
                  </button>
                </td>
              </tr>
            `;
          });
          
          $('#assignmentsTable tbody').html(rows);
        }
      });
      
      // Load available students (not already assigned to this slot)
      $.get('/api/classes/students', function(data) {
        const students = data.students;
        let studentOptions = '<option value="">Select a student</option>';
        
        students.forEach(student => {
          studentOptions += `<option value="${student.user_id}">${student.full_name}</option>`;
        });
        
        $('#studentId').html(studentOptions);
      });
      
      $('#assignmentsModal').modal('show');
      
      // Store the current slot ID for add assignment functionality
      $('#assignmentForm').data('slot-id', slotId);
    });
  });
  
  // Add assignment
  $('#btnAddAssignment').click(function() {
    const slotId = $('#assignmentForm').data('slot-id');
    const studentId = $('#studentId').val();
    const notes = $('#assignmentNotes').val();
    
    if (!studentId) {
      alert('Please select a student');
      return;
    }
    
    $.ajax({
      url: '/api/scheduling/assign',
      method: 'POST',
      data: JSON.stringify({
        slotId: slotId,
        studentId: studentId,
        notes: notes
      }),
      contentType: 'application/json',
      success: function(response) {
        // Refresh assignments
        $('.view-assignments[data-id="' + slotId + '"]').click();
        $('#studentId').val('');
        $('#assignmentNotes').val('');
        alert('Student assigned successfully!');
      },
      error: function(xhr) {
        alert('Error: ' + (xhr.responseJSON ? xhr.responseJSON.error : 'Failed to assign student'));
      }
    });
  });
  
  // Remove assignment
  $(document).on('click', '.remove-assignment', function() {
    if (!confirm('Are you sure you want to remove this assignment?')) {
      return;
    }
    
    const assignmentId = $(this).data('id');
    const slotId = $('#assignmentForm').data('slot-id');
    
    $.ajax({
      url: '/api/scheduling/unassign',
      method: 'POST',
      data: JSON.stringify({
        assignmentId: assignmentId
      }),
      contentType: 'application/json',
      success: function(response) {
        // Refresh assignments
        $('.view-assignments[data-id="' + slotId + '"]').click();
        alert('Assignment removed successfully!');
      },
      error: function(xhr) {
        alert('Error: ' + (xhr.responseJSON ? xhr.responseJSON.error : 'Failed to remove assignment'));
      }
    });
  });
  
  // Open auto-assign modal
  $('#btnAutoAssign').click(function() {
    // Set default date range to the current filter values
    $('#autoAssignStartDate').val($('#startDateFilter').val());
    $('#autoAssignEndDate').val($('#endDateFilter').val());
    $('#autoAssignModal').modal('show');
  });
  
  // Confirm auto-assign
  $('#btnConfirmAutoAssign').click(function() {
    const startDate = $('#autoAssignStartDate').val();
    const endDate = $('#autoAssignEndDate').val();
    
    if (!startDate || !endDate) {
      alert('Please select both start and end dates');
      return;
    }
    
    // Get slot IDs in the date range
    $.get(`/api/scheduling/slots?startDate=${startDate}&endDate=${endDate}`, function(data) {
      const slots = data.slots;
      
      if (slots.length === 0) {
        alert('No clinical slots found in the selected date range.');
        return;
      }
      
      const slotIds = slots.map(slot => slot.slot_id);
      
      $.ajax({
        url: '/api/scheduling/auto-assign',
        method: 'POST',
        data: JSON.stringify({
          slotIds: slotIds
        }),
        contentType: 'application/json',
        success: function(response) {
          $('#autoAssignModal').modal('hide');
          loadClinicalSlots();
          alert(`Auto-assignment complete! ${response.assignedCount} students assigned across ${response.slotCount} slots.`);
        },
        error: function(xhr) {
          alert('Error: ' + (xhr.responseJSON ? xhr.responseJSON.error : 'Failed to auto-assign students'));
        }
      });
    });
  });
});
</script>

<%- include('../partials/footer') %>
