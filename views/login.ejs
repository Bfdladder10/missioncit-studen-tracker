<!DOCTYPE html>
<html>
  <head>
    <title>EMS Tracker - Login</title>
    <link rel="stylesheet" href="/css/styles.css">
  </head>
  <body>
    <div class="auth-container">
      <h1>EMS Tracker Login</h1>
      <div id="errorMessage" class="error" style="display: none;"></div>
      <form id="loginForm">
        <div class="form-group">
          <label for="email">Email</label>
          <input type="email" id="email" name="email" required>
        </div>
        <div class="form-group">
          <label for="password">Password</label>
          <input type="password" id="password" name="password" required>
        </div>
        <button type="submit" class="button">Log In</button>
      </form>
      <p class="auth-link">Don't have an account? <a href="/register">Register</a></p>
    </div>

    <script>
      document.getElementById('loginForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        const email = document.getElementById('email').value;
        const password = document.getElementById('password').value;
        const errorMsg = document.getElementById('errorMessage');
        
        try {
          const response = await fetch('/api/auth/login', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ email, password })
          });
          
          // Check if the response is JSON before trying to parse it
          const contentType = response.headers.get('content-type');
          let data;
          
          if (contentType && contentType.includes('application/json')) {
            try {
              data = await response.json();
            } catch (jsonError) {
              console.error('JSON parsing error:', jsonError);
              throw new Error('Server response format error. Please try again later.');
            }
          } else {
            // Handle non-JSON responses
            const textResponse = await response.text();
            console.error('Non-JSON response received:', textResponse.substring(0, 150));
            throw new Error('Server returned an invalid response format. Please try again later.');
          }
          
          if (!response.ok) {
            throw new Error(data?.error || 'Login failed');
          }
          
          // Redirect to dashboard on success
          window.location.href = '/dashboard';
          
        } catch (error) {
          errorMsg.textContent = error.message;
          errorMsg.style.display = 'block';
        }
      });
    </script>
  </body>
</html>
